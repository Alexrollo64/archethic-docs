"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2323],{472:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));a(1839);const o={id:"code-proposals-cd",title:"CD"},i=void 0,l={unversionedId:"build/core/governance/code-proposals-cd",id:"build/core/governance/code-proposals-cd",title:"CD",description:"The archethic-cd target produces an image capable of running archethic_node release.",source:"@site/docs/build/core/governance/cd.md",sourceDirName:"build/core/governance",slug:"/build/core/governance/code-proposals-cd",permalink:"/build/core/governance/code-proposals-cd",draft:!1,tags:[],version:"current",lastUpdatedAt:1686154006,formattedLastUpdatedAt:"Jun 7, 2023",frontMatter:{id:"code-proposals-cd",title:"CD"},sidebar:"docs",previous:{title:"Election",permalink:"/build/core/election"},next:{title:"CI",permalink:"/build/core/governance/code-proposals-ci"}},c={},s=[],d={toc:s};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"archethic-cd")," target produces an image capable of running ",(0,r.kt)("inlineCode",{parentName:"p"},"archethic_node")," release.\nThe objective of cd is to test the code proposal in a testnet environment which means spawning:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"5 nodes that run the new version"),(0,r.kt)("li",{parentName:"ul"},"2 validator containers"),(0,r.kt)("li",{parentName:"ul"},"1 prometheus container"),(0,r.kt)("li",{parentName:"ul"},"1 benchmark container")),(0,r.kt)("p",null,"the cd happens in multiple steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"first we start by copying the upgrade release and the logs we created in the CI part to a tmp folder"),(0,r.kt)("li",{parentName:"ul"},"next we create the subnet and we start all the containers responsible for the CD"),(0,r.kt)("li",{parentName:"ul"},"The validator container ensures that every node is up and do a benchmark before we apply the upgrade"),(0,r.kt)("li",{parentName:"ul"},"We apply the upgrade"),(0,r.kt)("li",{parentName:"ul"},"we start the second round of validation which is responsible for running benchmarks again, running the playbooks and gathering metrics from prometheus."),(0,r.kt)("li",{parentName:"ul"},"we wait for the final validation message and we clean all containers and images we created.")),(0,r.kt)("p",null,"nb: the cleaning phase will happen even in the case of failure."))}p.isMDXComponent=!0}}]);