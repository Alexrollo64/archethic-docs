"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7007],{5840:(e,t,r)=>{r.r(t),r.d(t,{Badge:()=>p,Bullet:()=>u,SpecifiedBy:()=>m,assets:()=>i,contentTitle:()=>s,default:()=>b,frontMatter:()=>n,metadata:()=>d,toc:()=>c});var o=r(7462),a=r(7294),l=r(3905);r(1839);const n={id:"sort-order",title:"SortOrder",hide_table_of_contents:!1},s=void 0,d={unversionedId:"build/api/schema/enums/sort-order",id:"build/api/schema/enums/sort-order",title:"SortOrder",description:"SortOrder represents the order of the result",source:"@site/docs/build/api/schema/enums/sort-order.mdx",sourceDirName:"build/api/schema/enums",slug:"/build/api/schema/enums/sort-order",permalink:"/build/api/schema/enums/sort-order",draft:!1,tags:[],version:"current",lastUpdatedAt:1687181141,formattedLastUpdatedAt:"Jun 19, 2023",frontMatter:{id:"sort-order",title:"SortOrder",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"ErrorContext",permalink:"/build/api/schema/enums/error-context"},next:{title:"AuthorizedKey",permalink:"/build/api/schema/objects/authorized-key"}},i={},c=[{value:"Values",id:"values",level:3},{value:"<code style={{ fontWeight: 'normal' }}>SortOrder.<b>ASC</b></code>",id:"code-style-fontweight-normal-sortorderbascbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>SortOrder.<b>DESC</b></code>",id:"code-style-fontweight-normal-sortorderbdescbcode",level:4},{value:"Member of",id:"member-of",level:3}],u=()=>(0,l.kt)(a.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,l.kt)(a.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),p=e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("span",{class:"badge badge--"+e.class},e.text)),k={toc:c,Bullet:u,SpecifiedBy:m,Badge:p};function b(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,o.Z)({},k,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"SortOrder represents the order of the result\npossible values are ASC or DESC"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"enum SortOrder {\n  ASC\n  DESC\n}\n")),(0,l.kt)("h3",{id:"values"},"Values"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-sortorderbascbcode"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"SortOrder.",(0,l.kt)("b",null,"ASC")))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Ascending order")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-sortorderbdescbcode"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"SortOrder.",(0,l.kt)("b",null,"DESC")))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Descending order")),(0,l.kt)("h3",{id:"member-of"},"Member of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/build/api/schema/queries/transaction-chain"},(0,l.kt)("inlineCode",{parentName:"a"},"transactionChain")),"  ",(0,l.kt)(p,{class:"secondary",text:"query",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);