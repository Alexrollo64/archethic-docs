"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[330],{4301:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>n,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=a(7462),i=(a(7294),a(3905));a(1839);const r={id:"code-proposals-ci",title:"CI"},n=void 0,l={unversionedId:"build/core/governance/code-proposals-ci",id:"build/core/governance/code-proposals-ci",title:"CI",description:"After a code proposal is received by a node in the network and passes initial validation, the next step in the process is the CI.",source:"@site/docs/build/core/governance/ci.md",sourceDirName:"build/core/governance",slug:"/build/core/governance/code-proposals-ci",permalink:"/build/core/governance/code-proposals-ci",draft:!1,tags:[],version:"current",lastUpdatedAt:1687180718,formattedLastUpdatedAt:"Jun 19, 2023",frontMatter:{id:"code-proposals-ci",title:"CI"},sidebar:"docs",previous:{title:"CD",permalink:"/build/core/governance/code-proposals-cd"},next:{title:"Code Proposals",permalink:"/build/core/governance/code-proposals"}},s={},p=[],c={toc:p};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,o.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"After a code proposal is received by a node in the network and passes initial validation, the next step in the process is the CI."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"archethic-ci")," target produces an image with build tools.\nIts goal is to compile the source code into ",(0,i.kt)("inlineCode",{parentName:"p"},"archethic_node")," release.\nThe CI part is powered by ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts/proposal_ci_job.sh"),".\nThe script runs in a container named ",(0,i.kt)("inlineCode",{parentName:"p"},"archethic-prop-{address}"),", it produces: release upgrade of ",(0,i.kt)("inlineCode",{parentName:"p"},"archethic_node")," and combined log of application of a code proposal to the source code, execution of unit tests, and log from linter. The log can be obtained with ",(0,i.kt)("inlineCode",{parentName:"p"},"docker logs"),", the release upgrade and the validator with ",(0,i.kt)("inlineCode",{parentName:"p"},"docker cp"),", after that the container can be disposed."),(0,i.kt)("p",null,"the logs are collected in ",(0,i.kt)("inlineCode",{parentName:"p"},"ci_logfile.txt")," and this file is copied at the end to tmp directory created in filesystem."),(0,i.kt)("p",null,"the script runs multiple commands:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Creates a branch prop_{proposal_address}"),(0,i.kt)("li",{parentName:"ul"},"Apply the changes to the branch"),(0,i.kt)("li",{parentName:"ul"},"Add the changes and commit"),(0,i.kt)("li",{parentName:"ul"},"Checking if the project is formatted correctly"),(0,i.kt)("li",{parentName:"ul"},"Check if the project compiles without warning"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/rrrene/credo"},"Credo")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/nccgroup/sobelow"},"Sobelow")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/sascha-wolf/knigge"},"Knigge")),(0,i.kt)("li",{parentName:"ul"},"Runs the test suite"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/jeremyjh/dialyxir"},"Dialyzer")),(0,i.kt)("li",{parentName:"ul"},"Checks if dependencies are outdated"),(0,i.kt)("li",{parentName:"ul"},"And Finally it creates an upgrade release with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/bitwalker/distillery"},"Distillery"))))}d.isMDXComponent=!0}}]);