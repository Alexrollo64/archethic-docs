"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5510],{1313:(e,s,a)=>{a.r(s),a.d(s,{Badge:()=>m,Bullet:()=>u,SpecifiedBy:()=>p,assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var t=a(7462),d=a(7294),r=a(3905);a(1839);const n={id:"genesis-address",title:"genesisAddress",hide_table_of_contents:!1},i=void 0,l={unversionedId:"build/api/schema/queries/genesis-address",id:"build/api/schema/queries/genesis-address",title:"genesisAddress",description:"Query the network to find the genesis address of a transaction",source:"@site/docs/build/api/schema/queries/genesis-address.mdx",sourceDirName:"build/api/schema/queries",slug:"/build/api/schema/queries/genesis-address",permalink:"/build/api/schema/queries/genesis-address",draft:!1,tags:[],version:"current",lastUpdatedAt:1687263570,formattedLastUpdatedAt:"Jun 20, 2023",frontMatter:{id:"genesis-address",title:"genesisAddress",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"beaconChainSummary",permalink:"/build/api/schema/queries/beacon-chain-summary"},next:{title:"lastTransaction",permalink:"/build/api/schema/queries/last-transaction"}},o={},c=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>genesisAddress.<b>address</b></code><Bullet /><code>Address!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-genesisaddressbaddressbcodeaddress--",level:4},{value:"Type",id:"type",level:3},{value:'<code>Address</code> <Badge class="secondary" text="scalar"/>',id:"address-",level:4}],u=()=>(0,r.kt)(d.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,r.kt)(d.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,r.kt)(d.Fragment,null,(0,r.kt)("span",{class:"badge badge--"+e.class},e.text)),g={toc:c,Bullet:u,SpecifiedBy:p,Badge:m};function h(e){let{components:s,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},g,a,{components:s,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Query the network to find the genesis address of a transaction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"genesisAddress(\n  address: Address!\n): Address\n")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-genesisaddressbaddressbcodeaddress--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"genesisAddress.",(0,r.kt)("b",null,"address"))),(0,r.kt)(u,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/build/api/schema/scalars/address"},(0,r.kt)("inlineCode",{parentName:"a"},"Address!"))," ",(0,r.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"type"},"Type"),(0,r.kt)("h4",{id:"address-"},(0,r.kt)("a",{parentName:"h4",href:"/build/api/schema/scalars/address"},(0,r.kt)("inlineCode",{parentName:"a"},"Address"))," ",(0,r.kt)(m,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The ","[Address]"," scalar type represents a transaction's address.\nThe Address appears in a JSON response as Base16 formatted string. The parsed address will\nbe converted to a binary and any invalid address with an invalid algorithm or invalid size will be rejected")))}h.isMDXComponent=!0}}]);